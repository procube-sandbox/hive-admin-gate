- name: check user
  raw: "show arp; show arp"
#    configure
#    show system login user {{ cs_obj[loop_protocol ~ 'ID'] }}
  register: result_show_run
#  vars:
#    ansible_connection: ssh
#    ansible_network_os: ios
 
- name: Extract lines containing a specific string
  set_fact:
    user_command_1: "username {{ cs_obj[loop_protocol ~ 'ID'] }} privilege 15 secret {{ cs_obj[loop_protocol ~ 'Password'] }}"
    user_command_2: "username {{ cs_obj[loop_protocol ~ 'ID'] }} secret {{ cs_obj[loop_protocol ~ 'Password'] }}"
    result_check_user : "{{ result_show_run.stdout_lines | select('match', search_string) }}"
  vars:
    search_string : "username {{ cs_obj[loop_protocol ~ 'ID'] }}"

- name: create user
  raw: "conf t; hostname X; end"
#  vars:
#    ansible_connection: ssh
#    ansible_network_os: ios
  when: result_check_user | length == 0

- name: update user
  raw: "conf t; hostname Y; end"
#  vars:
#    ansible_connection: ssh
#    ansible_network_os: ios
  when: result_check_user | length > 0

- name: remote login linux shell admin-exec
  expect:
    command: ssh -o StrictHostKeyChecking=no -l "{{ cs_obj[loop_protocol ~ 'ID'] }}" "{{ hostname }}"
    responses:
      ".*[Pp]assword:.*": "{{ cs_obj[loop_protocol ~ 'Password'] }}"
    timeout: 10
  changed_when: false
  vars:
    ansible_connection: local

- name: config save
  raw: write memory
#  vars:
#    ansible_connection: ssh
#    ansible_network_os: ios
