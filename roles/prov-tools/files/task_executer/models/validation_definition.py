# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from task_executer.models.base_model_ import Model
from task_executer import util


class ValidationDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, validate_ex=None, description_ex=None, is_warning=None):  # noqa: E501
        """ValidationDefinition - a model defined in OpenAPI

        :param validate_ex: The validate_ex of this ValidationDefinition.  # noqa: E501
        :type validate_ex: str
        :param description_ex: The description_ex of this ValidationDefinition.  # noqa: E501
        :type description_ex: str
        :param is_warning: The is_warning of this ValidationDefinition.  # noqa: E501
        :type is_warning: bool
        """
        self.openapi_types = {
            'validate_ex': str,
            'description_ex': str,
            'is_warning': bool
        }

        self.attribute_map = {
            'validate_ex': 'validateEx',
            'description_ex': 'descriptionEx',
            'is_warning': 'isWarning'
        }

        self._validate_ex = validate_ex
        self._description_ex = description_ex
        self._is_warning = is_warning

    @classmethod
    def from_dict(cls, dikt) -> 'ValidationDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _validationDefinition of this ValidationDefinition.  # noqa: E501
        :rtype: ValidationDefinition
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validate_ex(self):
        """Gets the validate_ex of this ValidationDefinition.

        チェックを行う計算式。この計算式の結果が null か false である場合は、エラーとなる  # noqa: E501

        :return: The validate_ex of this ValidationDefinition.
        :rtype: str
        """
        return self._validate_ex

    @validate_ex.setter
    def validate_ex(self, validate_ex):
        """Sets the validate_ex of this ValidationDefinition.

        チェックを行う計算式。この計算式の結果が null か false である場合は、エラーとなる  # noqa: E501

        :param validate_ex: The validate_ex of this ValidationDefinition.
        :type validate_ex: str
        """
        if validate_ex is None:
            raise ValueError("Invalid value for `validate_ex`, must not be `None`")  # noqa: E501

        self._validate_ex = validate_ex

    @property
    def description_ex(self):
        """Gets the description_ex of this ValidationDefinition.

        エラーメッセージを生成する計算式。エラーの原因となった情報を埋め込むことが可能である。  # noqa: E501

        :return: The description_ex of this ValidationDefinition.
        :rtype: str
        """
        return self._description_ex

    @description_ex.setter
    def description_ex(self, description_ex):
        """Sets the description_ex of this ValidationDefinition.

        エラーメッセージを生成する計算式。エラーの原因となった情報を埋め込むことが可能である。  # noqa: E501

        :param description_ex: The description_ex of this ValidationDefinition.
        :type description_ex: str
        """

        self._description_ex = description_ex

    @property
    def is_warning(self):
        """Gets the is_warning of this ValidationDefinition.

        エラーレベルが警告か否か。この値が true である場合、 API で ignoreWarning パラメータを指定することでエラーを無視して登録できる。  # noqa: E501

        :return: The is_warning of this ValidationDefinition.
        :rtype: bool
        """
        return self._is_warning

    @is_warning.setter
    def is_warning(self, is_warning):
        """Sets the is_warning of this ValidationDefinition.

        エラーレベルが警告か否か。この値が true である場合、 API で ignoreWarning パラメータを指定することでエラーを無視して登録できる。  # noqa: E501

        :param is_warning: The is_warning of this ValidationDefinition.
        :type is_warning: bool
        """

        self._is_warning = is_warning
