# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from task_executer.models.base_model_ import Model
from task_executer import util


class PropagationSetting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ref_class_name=None, dependency=None, target_property=None):  # noqa: E501
        """PropagationSetting - a model defined in OpenAPI

        :param ref_class_name: The ref_class_name of this PropagationSetting.  # noqa: E501
        :type ref_class_name: str
        :param dependency: The dependency of this PropagationSetting.  # noqa: E501
        :type dependency: List[str]
        :param target_property: The target_property of this PropagationSetting.  # noqa: E501
        :type target_property: str
        """
        self.openapi_types = {
            'ref_class_name': str,
            'dependency': List[str],
            'target_property': str
        }

        self.attribute_map = {
            'ref_class_name': 'refClassName',
            'dependency': 'dependency',
            'target_property': 'targetProperty'
        }

        self._ref_class_name = ref_class_name
        self._dependency = dependency
        self._target_property = target_property

    @classmethod
    def from_dict(cls, dikt) -> 'PropagationSetting':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _propagationSetting of this PropagationSetting.  # noqa: E501
        :rtype: PropagationSetting
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ref_class_name(self):
        """Gets the ref_class_name of this PropagationSetting.

        伝播先クラス  - 伝播先保持属性はここで指定されたクラスのキー属性の値を保持しており、プロビジョニング反映後のマスタデータベース上に存在するオブジェクトを指していなければならない  - 伝播先のオブジェクトがプロビジョニング反映後のマスタデータベースに見つからない場合はプロビジョニング要求全体がエラーになる。ただし当該のプロビジョニング要求で伝播先のオブジェクトが削除されている場合にはエラーとならない。  - 省略された場合は伝播先は自オブジェクトになる  # noqa: E501

        :return: The ref_class_name of this PropagationSetting.
        :rtype: str
        """
        return self._ref_class_name

    @ref_class_name.setter
    def ref_class_name(self, ref_class_name):
        """Sets the ref_class_name of this PropagationSetting.

        伝播先クラス  - 伝播先保持属性はここで指定されたクラスのキー属性の値を保持しており、プロビジョニング反映後のマスタデータベース上に存在するオブジェクトを指していなければならない  - 伝播先のオブジェクトがプロビジョニング反映後のマスタデータベースに見つからない場合はプロビジョニング要求全体がエラーになる。ただし当該のプロビジョニング要求で伝播先のオブジェクトが削除されている場合にはエラーとならない。  - 省略された場合は伝播先は自オブジェクトになる  # noqa: E501

        :param ref_class_name: The ref_class_name of this PropagationSetting.
        :type ref_class_name: str
        """

        self._ref_class_name = ref_class_name

    @property
    def dependency(self):
        """Gets the dependency of this PropagationSetting.


        :return: The dependency of this PropagationSetting.
        :rtype: List[str]
        """
        return self._dependency

    @dependency.setter
    def dependency(self, dependency):
        """Sets the dependency of this PropagationSetting.


        :param dependency: The dependency of this PropagationSetting.
        :type dependency: List[str]
        """

        self._dependency = dependency

    @property
    def target_property(self):
        """Gets the target_property of this PropagationSetting.

        伝播先の属性の属性名 - 伝播先属性は伝播先のクラスに定義されており、導出式属性が設定されていなければならない  # noqa: E501

        :return: The target_property of this PropagationSetting.
        :rtype: str
        """
        return self._target_property

    @target_property.setter
    def target_property(self, target_property):
        """Sets the target_property of this PropagationSetting.

        伝播先の属性の属性名 - 伝播先属性は伝播先のクラスに定義されており、導出式属性が設定されていなければならない  # noqa: E501

        :param target_property: The target_property of this PropagationSetting.
        :type target_property: str
        """
        if target_property is None:
            raise ValueError("Invalid value for `target_property`, must not be `None`")  # noqa: E501

        self._target_property = target_property
