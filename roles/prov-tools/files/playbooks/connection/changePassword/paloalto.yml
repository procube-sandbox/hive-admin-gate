- name: check for user
  paloaltonetworks.panos.panos_op:
    cmd: show admins all
    provider: "{{ provider }}"
  vars:
    ansible_connection: local
    provider:
      ip_address: "{{ hostname }}"
      username: "{{ cs_obj.ansibleID }}"
      password: "{{ cs_obj.ansiblePassword }}"
  register: command_output

- name: Extract lines containing a specific string
  set_fact:
    result_check_user: "{{ command_output.stdout_lines | select('search', search_string) }}"
  vars:
    search_string: ".*{{ cs_obj[loop_protocol ~ 'ID']}}.*"

- name: create user
  paloaltonetworks.panos.panos_admin:
    admin_username: "{{ cs_obj[loop_protocol ~ 'ID'] }}"
    admin_password: "{{ cs_obj[loop_protocol ~ 'Password'] }}"
    superuser: true
    commit: true
    provider: "{{ provider }}"
  vars:
    ansible_connection: local
    provider:
      ip_address: "{{ hostname }}"
      username: "{{ cs_obj.ansibleID }}"
      password: "{{ cs_obj.ansiblePassword }}"
  when: result_check_user | length == 0

- name: update user
  paloaltonetworks.panos.panos_admin:
    admin_username: "{{ cs_obj[loop_protocol ~ 'ID'] }}"
    admin_password: "{{ cs_obj[loop_protocol ~ 'Password'] }}"
    superuser: true
    commit: true
    provider: "{{ provider }}"
  vars:
    ansible_connection: local
    provider:
      ip_address: "{{ hostname }}"
      username: "{{ cs_obj.ansibleID }}"
      password: "{{ cs_obj.ansiblePassword }}"
  when: result_check_user | length > 0

- name: remote login linux shell admin-exec
  expect:
    command: ssh -l "{{ cs_obj[loop_protocol ~ 'ID'] }}" "{{ hostname }}"
    responses:
      ".*[Pp]assword:.*": "{{ cs_obj[loop_protocol ~ 'Password'] }}"
    timeout: 10
  changed_when: false
  vars:
    ansible_connection: local
