---
- delegate_to: localhost
  block:
  - name: Get token of REST API.
    uri:
      url: "http://guacamole:8080/guacamole/api/tokens"
      headers:
        Content-Type: "application/x-www-form-urlencoded"
      method: POST
      body: 'username={{ username }}&password={{ password }}'
      validate_certs: false
      return_content: yes
      status_code: 200
    register: token
  
  - name: Get Connections.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/connections"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
      method: GET
      validate_certs: false
      return_content: yes
      status_code: 200
    register: guacamole_connections
  - name: Set fact to target connection id.
    set_fact:
      connectionidvnc: "{{ item.key }}"
    when: item.value.idmIdentifier == id and item.value.protocol == 'vnc'
    loop: "{{ guacamole_connections.json | dict2items }}"
    loop_control:
      label: "{{ item.key }}"
  - name: Check if cs_obj.actions exists and is not empty
    set_fact:
      event_list: []
  - name: Generate httpLoginFormat Strings
    debug:
      msg: >-
        {%- if item.newPage -%} ],[
        {%- else -%} ,
        {%- endif -%}
        {
        "event": "{{ item.event }}",
        "getElementMethod": "{{ item.getElementMethod }}",
        "targetElementPath": "{{ item.targetElementPath }}",
        "sendValue": "{{ item.sendValue | default('') }}"
        }
    loop: "{{ cs_obj.actions }}"
    when: cs_obj.actions is defined and cs_obj.actions | length > 0
    register: event_list
  - debug:
      msg: "{{ event_list.results | map(attribute='msg') | join(' ') }}"
    register: event_str
  
  - name: Put connection.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/connections/{{ connectionidvnc }}"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
        Content-Type: "application/json"
      method: PUT
      body_format: json
      body:
        name: "{{ hostname }}:{{ id }}-vnc"
        parentIdentifier: ROOT
        protocol: "vnc"
        idmIdentifier: "{{ id }}"
        parameters:
          port: "{{ cs_obj.httpPort | default('') }}"
          create-recording-path: "true"
          recording-path: "${HISTORY_PATH}/${HISTORY_UUID}"
          username: "{{ cs_obj.httpID }}"
          password: "{{ cs_obj.httpPassword }}"
          hostname: "{{ hostname }}"
          swcZone: "{{ swcZone | join(',') | default('') }}"
          httpLoginFormat: "{{ httpVars | to_json }}"
        attributes:
          remark: "{{ remark | default('') }}"
          max-connections: "0"
          max-connections-per-user: "0"
          weight: ""
          failover-only: ""
          guacd-port: ""
          guacd-encryption: ""
      validate_certs: false
      status_code: 204
    when: prov_operation != 'delete' and connectionidvnc is defined
    vars:
      httpVars: >-
        {
        "target":"proliant",
        "protocol":"{{ cs_obj.httpProtocol }}",
        "fqdn":"{{ hostname ~ (':' ~ cs_obj.httpPort) | default('')}}",
        "path":"",
        "username": "{{ cs_obj.httpID }}",
        "password": "{{ cs_obj.httpPassword }}",
        "authType": "{{ cs_obj.authType }}",
        "params":
        [[
        {{ event_str.msg[1:] }}
        ]]}
 
  - name: Post connection.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/connections"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
        Content-Type: "application/json"
      method: POST
      body_format: json
      body:
        name: "{{ hostname }}:{{ id }}-vnc"
        parentIdentifier: ROOT
        protocol: "vnc"
        idmIdentifier: "{{ id }}"
        parameters:
          port: "{{ cs_obj.httpPort | default('') }}"
          create-recording-path: "true"
          recording-path: "${HISTORY_PATH}/${HISTORY_UUID}"
          username: "{{ cs_obj.httpID }}"
          password: "{{ cs_obj.httpPassword }}"
          hostname: "{{ hostname }}"
          swcZone: "{{ swcZone | join(',') | default('') }}"
          httpLoginFormat: "{{ httpVars | to_json }}"
        attributes:
          remark: "{{ remark | default('') }}"
          max-connections: "0"
          max-connections-per-user: "0"
          weight: ""
          failover-only: ""
          guacd-port: ""
          guacd-encryption: ""
      validate_certs: false
      return_content: yes
      status_code: 200
    when: connectionidvnc is not defined
    vars:
      httpVars: >-
        {
        "target":"proliant",
        "protocol":"{{ cs_obj.httpProtocol }}",
        "fqdn":"{{ hostname ~ (':' ~ cs_obj.httpPort) | default('')}}",
        "path":"",
        "username": "{{ cs_obj.httpID }}",
        "password": "{{ cs_obj.httpPassword }}",
        "authType": "{{ cs_obj.authType }}",
        "params":
        [[
        {{ event_str.msg[1:] }}
        ]]}
    register: new_connection
  
  - name: Delete connection.
    uri:
      url: "http://guacamole:8080/guacamole/api/session/data/postgresql/connections/{{ connectionidvnc }}"
      headers:
        Guacamole-Token: "{{ token.json.authToken }}"
      method: DELETE
      validate_certs: false
      status_code: 204
    when: prov_operation == 'delete' and connectionidvnc is defined
  