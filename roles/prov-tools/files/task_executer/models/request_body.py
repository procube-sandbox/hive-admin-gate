# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from task_executer.models.base_model_ import Model
from task_executer.models.class_definition import ClassDefinition
from task_executer.models.prov_setting import ProvSetting
from task_executer.models.task import Task
from task_executer import util

from task_executer.models.class_definition import ClassDefinition  # noqa: E501
from task_executer.models.prov_setting import ProvSetting  # noqa: E501
from task_executer.models.task import Task  # noqa: E501

class RequestBody(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, prov_setting=None, task_operation=None, class_definition=None):  # noqa: E501
        """RequestBody - a model defined in OpenAPI

        :param prov_setting: The prov_setting of this RequestBody.  # noqa: E501
        :type prov_setting: ProvSetting
        :param task_operation: The task_operation of this RequestBody.  # noqa: E501
        :type task_operation: Task
        :param class_definition: The class_definition of this RequestBody.  # noqa: E501
        :type class_definition: Dict[str, ClassDefinition]
        """
        self.openapi_types = {
            'prov_setting': ProvSetting,
            'task_operation': Task,
            'class_definition': Dict[str, ClassDefinition]
        }

        self.attribute_map = {
            'prov_setting': 'provSetting',
            'task_operation': 'taskOperation',
            'class_definition': 'classDefinition'
        }

        self._prov_setting = prov_setting
        self._task_operation = task_operation
        self._class_definition = class_definition

    @classmethod
    def from_dict(cls, dikt) -> 'RequestBody':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The requestBody of this RequestBody.  # noqa: E501
        :rtype: RequestBody
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prov_setting(self):
        """Gets the prov_setting of this RequestBody.


        :return: The prov_setting of this RequestBody.
        :rtype: ProvSetting
        """
        return self._prov_setting

    @prov_setting.setter
    def prov_setting(self, prov_setting):
        """Sets the prov_setting of this RequestBody.


        :param prov_setting: The prov_setting of this RequestBody.
        :type prov_setting: ProvSetting
        """

        self._prov_setting = prov_setting

    @property
    def task_operation(self):
        """Gets the task_operation of this RequestBody.


        :return: The task_operation of this RequestBody.
        :rtype: Task
        """
        return self._task_operation

    @task_operation.setter
    def task_operation(self, task_operation):
        """Sets the task_operation of this RequestBody.


        :param task_operation: The task_operation of this RequestBody.
        :type task_operation: Task
        """

        self._task_operation = task_operation

    @property
    def class_definition(self):
        """Gets the class_definition of this RequestBody.


        :return: The class_definition of this RequestBody.
        :rtype: Dict[str, ClassDefinition]
        """
        return self._class_definition

    @class_definition.setter
    def class_definition(self, class_definition):
        """Sets the class_definition of this RequestBody.


        :param class_definition: The class_definition of this RequestBody.
        :type class_definition: Dict[str, ClassDefinition]
        """

        self._class_definition = class_definition
