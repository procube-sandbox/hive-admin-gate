# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from task_executer.models.base_model_ import Model
import re
from task_executer import util

import re  # noqa: E501

class ClassProvProperty(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_name=None, mapping_name=None, modified_only=None):  # noqa: E501
        """ClassProvProperty - a model defined in OpenAPI

        :param property_name: The property_name of this ClassProvProperty.  # noqa: E501
        :type property_name: str
        :param mapping_name: The mapping_name of this ClassProvProperty.  # noqa: E501
        :type mapping_name: str
        :param modified_only: The modified_only of this ClassProvProperty.  # noqa: E501
        :type modified_only: bool
        """
        self.openapi_types = {
            'property_name': str,
            'mapping_name': str,
            'modified_only': bool
        }

        self.attribute_map = {
            'property_name': 'propertyName',
            'mapping_name': 'mappingName',
            'modified_only': 'modifiedOnly'
        }

        self._property_name = property_name
        self._mapping_name = mapping_name
        self._modified_only = modified_only

    @classmethod
    def from_dict(cls, dikt) -> 'ClassProvProperty':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The _classProvProperty of this ClassProvProperty.  # noqa: E501
        :rtype: ClassProvProperty
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_name(self):
        """Gets the property_name of this ClassProvProperty.

        プロビジョニングで転送する属性  # noqa: E501

        :return: The property_name of this ClassProvProperty.
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """Sets the property_name of this ClassProvProperty.

        プロビジョニングで転送する属性  # noqa: E501

        :param property_name: The property_name of this ClassProvProperty.
        :type property_name: str
        """
        if property_name is None:
            raise ValueError("Invalid value for `property_name`, must not be `None`")  # noqa: E501

        self._property_name = property_name

    @property
    def mapping_name(self):
        """Gets the mapping_name of this ClassProvProperty.

        属性のマッピング名 - プロビジョニング先の属性名としてオブジェクト上の属性名と異なったものを付けることができる。  # noqa: E501

        :return: The mapping_name of this ClassProvProperty.
        :rtype: str
        """
        return self._mapping_name

    @mapping_name.setter
    def mapping_name(self, mapping_name):
        """Sets the mapping_name of this ClassProvProperty.

        属性のマッピング名 - プロビジョニング先の属性名としてオブジェクト上の属性名と異なったものを付けることができる。  # noqa: E501

        :param mapping_name: The mapping_name of this ClassProvProperty.
        :type mapping_name: str
        """
        if mapping_name is not None and not re.search(r'^[0-9A-Za-z!$%()*\-.\/=?@\[\]^_`{|}~]+$', mapping_name):  # noqa: E501
            raise ValueError("Invalid value for `mapping_name`, must be a follow pattern or equal to `/^[0-9A-Za-z!$%()*\-.\/=?@\[\]^_`{|}~]+$/`")  # noqa: E501

        self._mapping_name = mapping_name

    @property
    def modified_only(self):
        """Gets the modified_only of this ClassProvProperty.

        値の出力を変更があった場合に限定する。 - true の場合は変更がない値は null で登録する。 - 主キー列名（primaryColumn）のカラムと対応する属性は値の変更の有無にかかわらず出力する。 - 種別が RDB の場合のみ機能する。  # noqa: E501

        :return: The modified_only of this ClassProvProperty.
        :rtype: bool
        """
        return self._modified_only

    @modified_only.setter
    def modified_only(self, modified_only):
        """Sets the modified_only of this ClassProvProperty.

        値の出力を変更があった場合に限定する。 - true の場合は変更がない値は null で登録する。 - 主キー列名（primaryColumn）のカラムと対応する属性は値の変更の有無にかかわらず出力する。 - 種別が RDB の場合のみ機能する。  # noqa: E501

        :param modified_only: The modified_only of this ClassProvProperty.
        :type modified_only: bool
        """

        self._modified_only = modified_only
